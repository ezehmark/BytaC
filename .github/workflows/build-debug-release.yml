name: Build Debug APK

on:
  push:
    branches:
      - main  # Change to your branch if needed

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository with full clone
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures a full clone

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'  # Use 'npm' if using npm

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: yarn install  # Change to 'npm install' if using npm

      # Step 4: Install Expo CLI
      - name: Install Expo CLI
        run: npm install -g expo-cli

      # Step 5: Ensure assets directory exists
      - name: Ensure Assets Directory Exists
        run: mkdir -p android/app/src/main/assets

      # Step 6: Bundle JavaScript for Production
      - name: Bundle React Native JavaScript
        run: |
          npx react-native bundle --platform android --dev false \
          --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res/

      # Step 7: Debug - List res folder contents
      - name: List res folder contents
        run: ls -R android/app/src/main/res

      # Step 8: Remove old build cache
      - name: Remove old build cache
        run: rm -rf ~/.gradle/caches

      # Step 9: Clean Gradle Build
      - name: Clean Gradle Build
        run: cd android && ./gradlew clean

      # Step 10: Grant Execution Permission to Gradle
      - name: Grant Execution Permission to Gradle
        run: chmod +x android/gradlew

      # Step 11: Build Debug APK with Gradle
      - name: Build Debug APK with Gradle
        run: cd android && ./gradlew assembleDebug --no-daemon --stacktrace --info

      # Step 12: Ensure APK Exists
      - name: Ensure APK Exists
        run: |
          echo "Checking if APK exists..."
          ls -lah android/app/build/outputs/apk/debug/
        continue-on-error: true

      # Step 13: Upload APK as Artifact
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-app
          path: android/app/build/outputs/apk/debug/app-debug.apk
